server:
port: 8080

spring:
application:
name: batch-processing-of-financial-transactions

# Database Configuration
datasource:
url: jdbc:h2:mem:financialdb
driver-class-name: org.h2.Driver
username: sa
password: ""

# For Production MySQL (comment out H2 and uncomment this)
# datasource:
#   url: jdbc:mysql://localhost:3306/financial_batch_db
#   username: ${DB_USERNAME:root}
#   password: ${DB_PASSWORD:password}
#   driver-class-name: com.mysql.cj.jdbc.Driver

# JPA Configuration
jpa:
hibernate:
ddl-auto: create-drop
show-sql: false
properties:
hibernate:
dialect: org.hibernate.dialect.H2Dialect
format_sql: true

# H2 Console (for development)
h2:
console:
enabled: true
path: /h2-console

# Spring Batch Configuration
batch:
job:
enabled: false  # Don't auto-run jobs on startup
jdbc:
initialize-schema: always

# Mail Configuration (optional - only needed if notifications are enabled)
mail:
host: ${MAIL_HOST:smtp.gmail.com}
port: ${MAIL_PORT:587}
username: ${MAIL_USERNAME:your-email@gmail.com}
password: ${MAIL_PASSWORD:your-app-password}
properties:
mail:
smtp:
auth: true
starttls:
enable: true

# Logging Configuration
logging:
level:
com.basit.cz.batchprocessingoffinancialtransactions: DEBUG
org.springframework.batch: INFO
org.hibernate.SQL: DEBUG
org.hibernate.type.descriptor.sql.BasicBinder: TRACE
pattern:
console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Custom Application Properties
app:
batch:
chunk-size: ${CHUNK_SIZE:1000}
skip-limit: ${SKIP_LIMIT:100}
fraud-threshold: ${FRAUD_THRESHOLD:10000.00}
input-file: ${INPUT_FILE:classpath:data/transactions.csv}
output-directory: ${OUTPUT_DIR:./reports}

notification:
# Set to false by default to avoid mail configuration issues
enabled: ${NOTIFICATION_ENABLED:false}
email-recipients: ${EMAIL_RECIPIENTS:admin@company.com}

# Actuator Configuration
management:
endpoints:
web:
exposure:
include: health,info,metrics,batch
endpoint:
health:
show-details: always